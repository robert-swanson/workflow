#!/usr/bin/env python3
import argparse
import os
import sys

sys.path.append(os.environ.get("WORKFLOW_PATH"))
from workflow_py.path_object.category.category_utils import get_host_categories, get_category_with_name
from workflow_py.var_store import VAR_STORE
from workflow_py.path_object.script.saved_script_utils import make_saved_script
from workflow_py.utils import bash, fzf_select

parser = argparse.ArgumentParser(description="Create a new script from a template")
parser.add_argument("name", type=str, help="name of the new script")
parser.add_argument("-c", "--category", type=str, default=None, help="category for the new script")
parser.add_argument("-t", "--template", type=str, default="bash", help="template to use for the new script")
args = parser.parse_args()

category_name = args.category
if category_name is None:
    categories = [category.name for category in get_host_categories()]
    category_name = fzf_select(categories, "Select a category")

category = get_category_with_name(category_name)
new_saved_script = make_saved_script(args.name, category, args.template)

bash("vim", new_saved_script.path)

new_saved_script.write_to_dir(VAR_STORE.get_local_scripts_dir())

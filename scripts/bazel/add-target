#!/usr/bin/env python3
import argparse
import json
import os
import sys
from workflow_py.utils import bash

sys.path.append(os.environ.get("WORKFLOW_PATH"))

parser = argparse.ArgumentParser(description="Adds a bazel target to compile_commands_settings.json to to support clangd and intellisense for these build targets")
parser.add_argument("target", nargs="?", type=str, help="the bazel target to add (e.g. //spacex/sat/network/connection_manager/...)")
parser.add_argument("-l", "--list", action="store_true", help="List the targets")
args = parser.parse_args()

payload="/home/rswanson/dev/satcode/payload"
os.chdir(payload)
filepath=f"{payload}/tools/refresh_compile_commands/compile_commands_settings.json"

if (not os.path.exists(filepath)):
    open(filepath, "w").write('{"targets": {}}')

data = open(filepath, "r").read()
targets = json.loads(data)

if (args.target is not None):
    targets["targets"][args.target] = ""

if (args.list):
    print([t for t, _ in targets["targets"].items()])

with open(filepath, "w") as f:
    f.write(json.dumps(targets, indent=4))

bash("bazel", "run", "//tools/refresh_compile_commands")
print(f"Run the following command to cleanup uneeded targets: 'vim {filepath}'")
